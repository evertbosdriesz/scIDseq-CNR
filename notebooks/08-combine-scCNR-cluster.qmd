---
title: "Comparision of CNR a interaction term results"
author: "Evert Bosdriesz"
format: html
---

```{r init, echo=FALSE, cache=FALSE, message=FALSE}
library(tidyverse)
library(here)

source(here("src", "graphics-options.R"))
 
## Global options
options(max.print = "80")

```

## Background

In this notebook, we explore the relation between differing edges from the scCNR analysis and Baseline node activation status.

We need the following data

-   scCNR results of differing edges \["results/CNR-solution-deviation-overview.tsv"\]

-   Cluster specific epitope

```{r}
df_cnr <- read_tsv(here("results/CNR-solution-deviation-overview.tsv")) %>% 
  rename("par_name" = `...1`)


df_perm <- read_tsv(here("results/cnr-sampleperm-pvals.tsv"))

dat_tmm <- read_tsv(here("data", "processed", "scIDseq-vanEijl-tmm.tsv")) %>% 
  select(sample_id, treatment, ab_name, ab_type, ab_count_tmm) %>% 
  filter(treatment != "No_EGF") %>% 
  mutate(treatment = factor(treatment, levels = c("EGF", "ip70S6K_EGF", "iRSK_EGF")))


dat_zscore <- read_csv(
  here("data", "processed" ,"TMM_normalised_z_transformed_concencus_clusters.csv")
  ) %>% 
  select(-...1, -plate_number, -treatment) %>% 
  mutate(cluster = as_factor(cluster)) %>% 
  pivot_longer(!c(cluster, sample_id), names_to = "ab_name", values_to = "zscore")


dat <- left_join(dat_tmm, dat_zscore)

rm(dat_tmm, dat_zscore)
head(dat)
length(unique(dat$sample_id))



```

Let's plot the estimated local response coefficients as a function of the measure basal node activity.

```{r}
ab_mapping_phospho = list(
    # Phospho-antibodies
    # MAPK
    "EGFR_P_Y1045" = "EGFRY1045", "EGFR_P_Y1173" = "EGFRY1173",
    "ERK1_2_P" = "ERK12",
    "RSK1_P_T359" = "RSK1T359", # "RSK1_P_S380" = "RSK1S380", 
    #AKT
    "AKT1_P" = "AKT1", "AKT123_P" = "AKT123",
    "MTOR_P" = "MTOR",
    "GSK3B_P" = "GSK3B",
    "RIBOSOMAL_S6_P" = "RPS6", "RB_P" = "RB",
     # Other
    "JNK_P" = "JNK", "CJUN_P" = "CJUN",
    # FAK (ITGB1 is not a phospho, but treated as input node (all incoming edges = 0))
    "ITGB1" = "ITGB1", "SRC_P" = "SRC", "FAK_P" = "FAK",
    # JAK-STAT  
    "JAK1_P" = "JAK1", "STAT1_P" = "STAT1", "STAT3_P" = "STAT3", "STAT5_P" = "STAT5",
    # WNT
    "LRP6_P" = "LRP6", "FRIZZLED_3" = "FZD",
     # SMAD
    "BMP2_4" = "BMP", "BMPRII" = "BMPR", "SMAD1_5_9_P" = "SMAD159", 
    "SMAD1_5_P" = "SMAD15", "SMAD2_3_P" = "SMAD23",
    # MKK3
    "MKK3_6_P" = "MKK36", "MAPK_P38_P" = "P38", "MAPK_P38_P2" = "P38D",
    "MAPK_APK2_P" = "MAPKAP2",  "CREB_P" = "CREB",
    # TNFalpa
    "IKBA_P" = "IKBA", 'NFKB_P65_P'= "P65", "RELA_P" = "RELA",
    # Output nodes
    "CMYC" = "CMYC", "CFOS_P" = "CFOS", # Not a phospho-p, but "activated" by pRSK
    "CDC2" = "CDC2", "CDK4" = "CDK4", "CYCLIN_E" = "CYCLINE", "CYCLIN_B1" = "CYCLINB1", 
    "H2A_P" = "H2A", "H3_P" = "H3",  "RB_P" = "RB"
)

df_cluster_median <- 
  dat %>% 
  #filter(ab_type == "phospho") %>% 
  group_by(ab_name, cluster) %>% 
  summarise(median_ab_count = median(ab_count_tmm))



df_cluster_median$node <- as.character(ab_mapping_phospho[df_cluster_median$ab_name])

tmp2 <- 
  df_cnr %>% 
  separate(par_name, into = c("type", "downstream_node", "upstream_node"), remove = FALSE) %>% 
  filter(type == "r") %>% 
  select(-mean) %>% 
  pivot_longer(
    cols = c(`1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`), 
    names_to = "cluster", values_to = "edge_strength") %>% 
  left_join(df_cluster_median, by = c("cluster" = "cluster", "upstream_node" = "node"))




ggplot(
  filter(tmp2, upstream_node == "ERK12"),
  aes(x = median_ab_count, y = edge_strength)) +
  geom_point() +
  
```

```{r}
# get edge strength deviation per cluster from population mean
df_edge_deviation <- 
  df_cnr |> 
  pivot_longer(
  cols = c(`1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`), 
  names_to = "cluster", values_to = "edge_strength") |> 
  mutate(edge_strength_deviation = edge_strength - mean) |> 
  select(-mean) |> 
  filter(str_starts(par_name, "r")) |> 
  separate(par_name, into = c("type", "downstream_node", "upstream_node"), remove = FALSE) 

# get mean baseline expression differences from population mean.

pop_mean <- 
  dat |> 
  #filter(ab_type == "phospho") %>% 
  group_by(ab_name, cluster) |> 
  summarise(clust_median_ab_count = median(ab_count_tmm))

clust_mean <- 
  dat |> 
  #filter(ab_type == "phospho") %>% 
  group_by(ab_name) |> 
  summarise(pop_median_ab_count = median(ab_count_tmm))

df_node_deviation <- 
  clust_mean |> 
  left_join(pop_mean, by = "ab_name") |> 
  mutate(node_deviation = (clust_median_ab_count - pop_median_ab_count) / pop_median_ab_count) 


df_node_deviation$node <- as.character(ab_mapping_phospho[df_node_deviation$ab_name])

df <- 
  df_edge_deviation |> 
  left_join(df_node_deviation, by = c("cluster" = "cluster", "upstream_node" = "node")) |> 
  rename(upstream_node_deviation = node_deviation) |> 
  select(-clust_median_ab_count, -pop_median_ab_count, -ab_name) |> 
  left_join(df_node_deviation, by = c("cluster" = "cluster", "downstream_node" = "node")) |> 
  rename(downstream_node_deviation = node_deviation) |> 
  select(-clust_median_ab_count, -pop_median_ab_count, -ab_name)
```

```{r, fig.height=5}
ggplot(df, aes(x = upstream_node_deviation, y = downstream_node_deviation, color = edge_strength_deviation)) +
  geom_point() +
  scale_color_distiller(palette = "RdBu") +
  facet_wrap(~par_name, scales = "free") +
  presentation_theme
```

```{r, fig.height=5}
ggplot(df, aes(x = upstream_node_deviation, y = edge_strength)) +
  geom_point() +
  #scale_color_distiller(palette = "RdBu") +
  facet_wrap(~par_name, scales = "free") +
  presentation_theme
```

```{r, fig.height=5}
ggplot(df, aes(x = downstream_node_deviation, y = edge_strength)) +
  geom_point() +
  #scale_color_distiller(palette = "RdBu") +
  facet_wrap(~par_name, scales = "free") +
  presentation_theme
```

```{r, fig.height=5}
ggplot(df, aes(x = downstream_node_deviation, y = upstream_node_deviation)) +
  geom_point() +
  #scale_color_distiller(palette = "RdBu") +
  facet_wrap(~par_name, scales = "free") +
  presentation_theme
```

```{r}
plot_correlation <- function(df, ab1, ab2, count_col = 'ab_count_tmm'){
  df |> 
    select(sample_id, ab_name, treatment, cluster, !!sym(count_col)) %>%
    pivot_wider(
      names_from = ab_name,
      values_from = !!sym(count_col)
    ) %>% 
    #mutate(in_cluster = if_else(cluster == c, TRUE, FALSE)) %>% 
    ggplot(aes(x = !!sym(ab1), y = !!sym(ab2), col = cluster)) +
    geom_point() +
    facet_wrap(~treatment) +
    labs(x = ab1, y = ab2,  subtitle = count_col) +
    #geom_smooth(method = "lm") +
    presentation_theme
}

plot_correlation(dat,"SMAD1_5_9_P",  "FAK_P") 
plot_correlation(dat,"STAT5_P",  "SRC_P") +
  facet_wrap(~cluster)

```

```{r}
tmp <- 
  df |> 
  group_by(par_name) |> 
  summarize(
    cor_upstream = cor(edge_strength_deviation, upstream_node_deviation, method = "spearman"),
    cor_downstream = cor(edge_strength_deviation, downstream_node_deviation, method = "spearman")
    ) 


ggplot(tmp, aes(x = cor_downstream, y = cor_upstream)) +
  geom_point() +
  presentation_theme
  
```
